<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlowerStore.Api</name>
    </assembly>
    <members>
        <member name="T:FlowerStore.Api.Bootstrapper">
            <summary>
            Web API bootstrapper
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Bootstrapper.RegisterAppServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register app services
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Configuration.AuthConfiguration">
            <summary>
            Authentication and Authorization config
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Configuration.AuthConfiguration.AddAppAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add application authentication
            </summary>
            <param name="services">Service collection</param>
            <param name="configuration">Configuration</param>
            <returns></returns>
        </member>
        <member name="M:FlowerStore.Api.Configuration.AuthConfiguration.UseAppAuth(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use application authorization
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Configuration.HealthCheckConfiguration">
            <summary>
            HealthCheck configuration
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Configuration.HealthCheckConfiguration.AddAppHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add app HealthCheck
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:FlowerStore.Api.Configuration.HealthCheckConfiguration.UseAppHealthChecks(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Use app HealthCheck
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:FlowerStore.Api.Configuration.SelfHealthCheck">
            <summary>
            
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Configuration.SelfHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Configuration.SwaggerConfiguration">
            <summary>
            Swagger configuration class
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Configuration.SwaggerConfiguration.AddAppSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,FlowerStore.Services.Settings.SwaggerSettings)">
            <summary>
            Add Swagger
            </summary>
            <param name="services"></param>
            <param name="swaggerSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FlowerStore.Api.Configuration.SwaggerConfiguration.UseAppSwagger(Microsoft.AspNetCore.Builder.WebApplication,FlowerStore.Services.Settings.SwaggerSettings)">
            <summary>
            Start the Swagger
            </summary>
            <param name="app"></param>
            <param name="settings"></param>
        </member>
        <member name="T:FlowerStore.Api.Configuration.VersioningConfiguration">
            <summary>
            Versioning configuration
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Configuration.VersioningConfiguration.AddAppVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add app versioning configuration
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Controllers.BaseController">
            <summary>
            Base controller
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Controllers.BaseController.GetUser">
            <summary>
            Gets user id
            </summary>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Accounts.AccountsController">
            <summary>
            Accounts controller
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Accounts.AccountsController.#ctor(Microsoft.Extensions.Logging.ILogger{FlowerStore.Api.Controllers.v1.Accounts.AccountsController},FlowerStore.Services.UserAccount.IUserAccountService)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="userAccountService"></param>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Accounts.AccountsController.Register(FlowerStore.Api.Controllers.v1.Accounts.Models.RegisterUserAccountRequest)">
            <summary>
            Register new user
            </summary>
            <param name="request">User info</param>
            <returns></returns>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Accounts.AccountsController.GetAll">
            <summary>
            Get all user accounts
            </summary>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Accounts.Models.RegisterUserAccountRequest">
            <summary>
            RegisterUserAccountRequest
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.RegisterUserAccountRequest.Name">
            <summary>
            Name
            </summary>
            <value></value>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.RegisterUserAccountRequest.Email">
            <summary>
            Email
            </summary>
            <value></value>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.RegisterUserAccountRequest.Password">
            <summary>
            Password
            </summary>
            <value></value>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.RegisterUserAccountRequest.ConfirmPassword">
            <summary>
            ConfirmPassword
            </summary>
            <value></value>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Accounts.Models.RegisterUserAccountRequest.op_Implicit(FlowerStore.Api.Controllers.v1.Accounts.Models.RegisterUserAccountRequest)~FlowerStore.Services.UserAccount.Models.RegisterAccountModel">
            <summary>
            Converts <c>RegisterUserAccountRequest</c> to <c>RegisterAccountModel</c>
            </summary>
            <param name="registerUser"></param>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse">
            <summary>
            UserAccountResponse
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.Id">
            <summary>
            User Id
            </summary>
            <value></value>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.Name">
            <summary>
            User name
            </summary>
            <value></value>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.Email">
            <summary>
            User email
            </summary>
            <value></value>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.EmailConfirmed">
            <summary>
            Email is confirmed
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.PhoneNumber">
            <summary>
            Phone number
            </summary>
            <value></value>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.PhoneNumberConfirmed">
            <summary>
            Phone number confirmation
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse.op_Implicit(FlowerStore.Services.UserAccount.Models.UserAccountModel)~FlowerStore.Api.Controllers.v1.Accounts.Models.UserAccountResponse">
            <summary>
            Converts <c>UserAccountModel</c> to <c>UserAccountResponse</c>
            </summary>
            <param name="model"></param>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Flowers.FlowersController">
            <summary>
            Flowers controller
            </summary>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
            <response code="403">Forbidden</response>
            <response code="404">Not Found</response>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.FlowersController.#ctor(FlowerStore.Services.Flowers.IFlowerService,Microsoft.Extensions.Logging.ILogger{FlowerStore.Api.Controllers.v1.Flowers.FlowersController})">
            <summary>
            Constructor
            </summary>
            <param name="flowerService"></param>
            <param name="logger"></param>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.FlowersController.GetFlowersAsync(System.Int32,System.Int32)">
            <summary>
            Get flowers
            </summary>
            <param name="page">The page</param>
            <param name="limit">Number of items in the page</param>
            <returns>List of FlowerResponse</returns>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.FlowersController.GetFlowerAsync(System.Int32)">
            <summary>
            Get flower by Id
            </summary>
            <param name="id">Id of flower</param>
            <returns>Flower</returns>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.FlowersController.AddFlowerAsync(FlowerStore.Api.Controllers.v1.Flowers.Models.AddFlowerRequest)">
            <summary>
            Add new flower
            </summary>
            <param name="addFlowerRequest">Flower data</param>
            <returns>Added flower</returns>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.FlowersController.UpdateFlowerAsync(System.Int32,FlowerStore.Api.Controllers.v1.Flowers.Models.UpdateFlowerRequest)">
            <summary>
            Update the flower by Id
            </summary>
            <param name="id">Id of flower</param>
            <param name="updateFlowerRequest">Modified flower data</param>
            <returns></returns>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.FlowersController.DeleteFlowerAsync(System.Int32)">
            <summary>
            Delete flower by Id
            </summary>
            <param name="id">Id of flower</param>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Flowers.Models.AddFlowerRequest">
            <summary>
            <c>AddFlowerRequest</c> model
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Flowers.Models.AddFlowerRequest.Name">
            <summary>
            Flower name
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Flowers.Models.AddFlowerRequest.Desription">
            <summary>
            Flower description
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.Models.AddFlowerRequest.op_Implicit(FlowerStore.Api.Controllers.v1.Flowers.Models.AddFlowerRequest)~FlowerStore.Services.Flowers.Models.AddFlowerModel">
            <summary>
            Converts <see cref="T:FlowerStore.Api.Controllers.v1.Flowers.Models.AddFlowerRequest"/> to <see cref="T:FlowerStore.Services.Flowers.Models.AddFlowerModel"/>
            </summary>
            <param name="addFlowerRequest"></param>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Flowers.Models.FlowerResponse">
            <summary>
            <c>FlowerResponse</c> model
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Flowers.Models.FlowerResponse.Id">
            <summary>
            Flower id
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Flowers.Models.FlowerResponse.Name">
            <summary>
            Flower name
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Flowers.Models.FlowerResponse.Desription">
            <summary>
            Flower description
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.Models.FlowerResponse.op_Implicit(FlowerStore.Services.Flowers.Models.FlowerModel)~FlowerStore.Api.Controllers.v1.Flowers.Models.FlowerResponse">
            <summary>
            Convert <see cref="T:FlowerStore.Services.Flowers.Models.FlowerModel"/> to <see cref="T:FlowerStore.Api.Controllers.v1.Flowers.Models.FlowerResponse"/>
            </summary>
            <param name="flowerModel"></param>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Flowers.Models.FlowersData">
            <summary>
            Flowers data
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.Models.FlowersData.#ctor(System.Collections.Generic.IEnumerable{FlowerStore.Api.Controllers.v1.Flowers.Models.FlowerResponse},System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="data"></param>
            <param name="page"></param>
            <param name="limit"></param>
            <param name="totalElements"></param>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Flowers.Models.UpdateFlowerRequest">
            <summary>
            <c>UpdateFlowerRequest</c> model
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Flowers.Models.UpdateFlowerRequest.Name">
            <summary>
            Flower name
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Flowers.Models.UpdateFlowerRequest.Desription">
            <summary>
            Flower description
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Flowers.Models.UpdateFlowerRequest.op_Implicit(FlowerStore.Api.Controllers.v1.Flowers.Models.UpdateFlowerRequest)~FlowerStore.Services.Flowers.Models.UpdateFlowerModel">
            <summary>
            Convert <see cref="T:FlowerStore.Api.Controllers.v1.Flowers.Models.UpdateFlowerRequest"/> to <see cref="T:FlowerStore.Services.Flowers.Models.UpdateFlowerModel"/>
            </summary>
            <param name="updateFlowerRequest"></param>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Login.LoginController">
            <summary>
            Login controller
            </summary>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Login.LoginController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,FlowerStore.Services.Login.ILoginService)">
            <summary>
            Logout controller constructor
            </summary>
            <param name="config"></param>
            <param name="loginService"></param>
        </member>
        <member name="M:FlowerStore.Api.Controllers.v1.Login.LoginController.LoginAsync(FlowerStore.Api.Controllers.v1.Login.Models.UserLogin)">
            <summary>
            Login
            </summary>
            <param name="userLogin">User login info</param>
            <returns></returns>
        </member>
        <member name="T:FlowerStore.Api.Controllers.v1.Login.Models.UserLogin">
            <summary>
            
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Login.Models.UserLogin.UserName">
            <summary>
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Controllers.v1.Login.Models.UserLogin.Password">
            <summary>
            </summary>
        </member>
        <member name="T:FlowerStore.Api.Pages.IndexModel">
            <summary>
            Index page model
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Pages.IndexModel.OpenApiEnabled">
            <summary>
            OpenApi enabled property
            </summary>
        </member>
        <member name="P:FlowerStore.Api.Pages.IndexModel.Version">
            <summary>
            Vesion property
            </summary>
            <returns></returns>
        </member>
        <member name="M:FlowerStore.Api.Pages.IndexModel.#ctor(FlowerStore.Services.Settings.SwaggerSettings)">
            <summary>
            
            </summary>
            <param name="swaggerSettings"></param>
        </member>
        <member name="M:FlowerStore.Api.Pages.IndexModel.OnGet">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
